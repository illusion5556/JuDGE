import json,re,Levenshtein
from tqdm import tqdm
import sys
sys.path.append('segment')
from segment.data_segment_xingshi import DataSegmentXingshi

def get_cause_names():
    cause_names = set()
    with open('./other/cause_codes.txt', 'r', encoding='utf8') as f:
        for line in f:
            l = line.strip()
            if l[-1] != '罪':
                print(l)
            cause_names.add(l)
    # print(f'cause name num: {len(cause_names)}')
    return cause_names

CAUSE_NAMES = get_cause_names()

replace_dict = {
    '爆炸': ['非法制造、买卖、运输、邮寄、储存枪支、弹药、爆炸物罪', '盗窃、抢夺枪支、弹药、爆炸物、危险物质罪',
             '抢劫枪支、弹药、爆炸物、危险物质罪'],
    '枪支': ['非法制造、买卖、运输、邮寄、储存枪支、弹药、爆炸物罪', '非法持有、私藏枪支、弹药罪',
                '抢劫枪支、弹药、爆炸物、危险物质罪', '违规制造、销售枪支罪', '非法出租、出借枪支罪'],
    '弹药': ['非法制造、买卖、运输、邮寄、储存枪支、弹药、爆炸物罪', '非法持有、私藏枪支、弹药罪',
             '抢劫枪支、弹药、爆炸物、危险物质罪', '盗窃、抢夺枪支、弹药、爆炸物、危险物质罪'],
    '危险物质': ['非法制造、买卖、运输、储存危险物质罪', '盗窃、抢夺枪支、弹药、爆炸物、危险物质罪',
                 '抢劫枪支、弹药、爆炸物、危险物质罪'],
    '非法携带': ['非法携带枪支、弹药、管制刀具、危险物品危及公共安全罪', '非法携带武器、管制刀具、爆炸物参加集会、游行、示威罪'],
    '冒险作业': ['强令、组织他人违章冒险作业罪'],
    '毒品': ['走私、贩卖、运输、制造毒品罪', '窝藏、转移、隐瞒毒品、毒赃罪'],
    '毒赃': ['窝藏、转移、隐瞒毒品、毒赃罪'],
    '吸毒': ['引诱、教唆、欺骗他人吸毒罪'],
    '动物': ['非法收购、运输、出售珍贵、濒危野生动物、珍贵、濒危野生动物制品罪', '危害珍贵、濒危野生动物罪',
             '非法猎捕、收购、运输、出售陆生野生动物罪', '走私珍贵动物、珍贵动物制品罪'],
    '食品': ['生产、销售有毒、有害食品罪', '生产、销售不符合安全标准的食品罪'],
    '窝藏': ['窝藏、包庇罪'],
    '包庇': ['窝藏、包庇罪'],
    '药': ['生产、销售、提供假药罪', '生产、销售、提供劣药罪', '非法提供麻醉药品、精神药品罪'],
    '安全事故': ['不报、谎报安全事故罪'],
    '标准': ['生产、销售不符合标准的医用器材罪', '生产、销售不符合安全标准的产品罪', '生产、销售不符合卫生标准的化妆品罪'],
    '卖淫': ['引诱、容留、介绍卖淫罪', '组织卖淫罪', '协助组织卖淫罪'],
    '淫秽物品': ['传播淫秽物品罪', '制作、复制、出版、贩卖、传播淫秽物品牟利罪'],
    '黑社会': ['组织、领导、参加黑社会性质组织罪', '包庇、纵容黑社会性质组织罪'],
    '注册商标': ['非法制造、销售非法制造的注册商标标识罪'],
    '执行': ['徇私舞弊减刑、假释、暂予监外执行罪', '拒不执行判决、裁定罪', '执行判决、裁定失职罪',
             '执行判决、裁定滥用职权罪'],
    '发票': ['虚开增值税专用发票、用于骗取出口退税、抵扣税款发票罪', '非法出售用于骗取出口退税、抵扣税款发票罪',
             '非法制造、出售非法制造的发票罪'],
    '林木': ['非法收购、运输盗伐、滥伐的林木罪'],
    '走私': ['走私普通货物、物品罪', '走私国家禁止进出口的货物、物品罪', '走私武器、弹药罪', '走私珍贵动物、珍贵动物制品罪'],
    '土地': ['非法转让、倒卖土地使用权罪', '非法批准征收、征用、占用土地罪'],
    '个人信息': ['侵犯公民个人信息罪', '出售、非法提供公民个人信息罪'],
    '假币': ['出售、购买、运输假币罪', '金融工作人员购买假币、以假币换取货币罪', '持有、使用假币罪'],
    '犯罪': ['资助危害国家安全犯罪活动罪', '帮助犯罪分子逃避处罚罪', '帮助信息网络犯罪活动罪', '传授犯罪方法罪',
                '拒绝提供间谍犯罪、恐怖主义犯罪、极端主义犯罪证据罪', '掩饰、隐瞒犯罪所得、犯罪所得收益罪',
                '包庇毒品犯罪分子罪', '放纵制售伪劣商品犯罪行为罪'],
    '制毒物品': ['非法生产、买卖、运输制毒物品、走私制毒物品罪'],
    '商品声誉': ['损害商业信誉、商品声誉罪'],
    '会计凭证': ['隐匿、故意销毁会计凭证、会计账簿、财务会计报告罪'],
    '枉法': ['民事、行政枉法裁判罪'],
    '证据': ['辩护人、诉讼代理人毁灭证据、伪造证据、妨害作证罪', '帮助毁灭、伪造证据罪',
                '拒绝提供间谍犯罪、恐怖主义犯罪、极端主义犯罪证据罪'],
    '国家机关': ['伪造、变造、买卖国家机关公文、证件、印章罪', '盗窃、抢夺、毁灭国家机关公文、证件、印章罪',
                    '国家机关工作人员签订、履行合同失职被骗罪'],
    '伪劣': ['生产、销售伪劣产品罪', '生产、销售伪劣农药、兽药、化肥、种子罪'],
    '骗取': ['骗取贷款、票据承兑、金融票证罪', '虚开增值税专用发票、用于骗取出口退税、抵扣税款发票罪',
             '非法制造、出售非法制造的用于骗取出口退税、抵扣税款发票罪', '非法出售用于骗取出口退税、抵扣税款发票罪'],
    '事业单位': ['伪造公司、企业、事业单位、人民团体印章罪', '国有公司、企业、事业单位人员失职罪',
                    '国有公司、企业、事业单位人员滥用职权罪'],
    '身份证': ['伪造、变造、买卖身份证件罪', '使用虚假身份证件、盗用身份证件罪', '伪造、变造居民身份证罪'],
    '非法处置': ['非法处置查封、扣押、冻结的财产罪'],
    '强制': ['强制猥亵、侮辱罪', '强制猥亵、侮辱妇女罪', '强制穿戴宣扬恐怖主义、极端主义服饰、标志罪'],
    '印章': ['伪造公司、企业、事业单位、人民团体印章罪', '伪造、变造、买卖国家机关公文、证件、印章罪',
             '盗窃、抢夺、毁灭国家机关公文、证件、印章罪'],
    '计算机': ['非法获取计算机信息系统数据、非法控制计算机信息系统罪', '提供侵入、非法控制计算机信息系统程序、工具罪'],
    '设施': ['破坏广播电视设施、公用电信设施罪', '过失损坏广播电视设施、公用电信设施罪'],
    '内幕': ['内幕交易、泄露内幕信息罪'],
    '期货': ['诱骗投资者买卖证券、期货合约罪', '操纵证券、期货市场罪', '操纵证券、期货交易价格罪',
             '编造并传播证券、期货交易虚假信息罪'],
    '证券': ['诱骗投资者买卖证券、期货合约罪', '操纵证券、期货市场罪', '伪造、变造国家有价证券罪',
             '编造并传播证券、期货交易虚假信息罪', '操纵证券、期货交易价格罪'],
    '安全事故': ['不报、谎报安全事故罪'],
    '出资': ['虚假出资、抽逃出资罪'],
    '违法票据': ['对违法票据承兑、付款、保证罪'],
    '滥用': ['执行判决、裁定滥用职权罪', '国有公司、企业、事业单位人员滥用职权罪', '滥用管理公司、证券职权罪'],
    '金融': ['伪造、变造、转让金融机构经营许可证、批准文件罪', '骗取贷款、票据承兑、金融票证罪', '伪造、变造金融票证罪'],
    '偷越': ['偷越国(边)境罪', '组织他人偷越国(边)境罪', '运送他人偷越国(边)境罪', '办理偷越国(边)境人员出入境证件罪',
                '放行偷越国(边)境人员罪'],
    '拐卖': ['拐卖妇女、儿童罪', '收买被拐卖的妇女、儿童罪'],
    '解救': ['聚众阻碍解救被收买的妇女、儿童罪', '不解救被拐卖、绑架妇女、儿童罪', '阻碍解救被拐卖、绑架妇女、儿童罪'],
    '证据': ['辩护人、诉讼代理人毁灭证据、伪造证据、妨害作证罪', '帮助毁灭、伪造证据罪',
                '拒绝提供间谍犯罪、恐怖主义犯罪、极端主义犯罪证据罪'],
    '作证': ['辩护人、诉讼代理人毁灭证据、伪造证据、妨害作证罪'],
    '秩序': ['聚众扰乱公共场所秩序、交通秩序罪', '妨害对公司、企业的管理秩序罪'],
    '增值税': ['虚开增值税专用发票、用于骗取出口退税、抵扣税款发票罪', '非法购买增值税专用发票、购买伪造的增值税专用发票罪',
                '伪造、出售伪造的增值税专用发票罪'],
    '档案': ['抢夺、窃取国有档案罪', '擅自出卖、转让国有档案罪'],
    '票据': ['骗取贷款、票据承兑、金融票证罪', '对违法票据承兑、付款、保证罪'],
    '信用卡': ['窃取、收买、非法提供信用卡信息罪'],
    '传销': ['组织、领导传销活动罪'],
    '假药': ['生产、销售、提供假药罪'],
    '著作权': ['侵犯著作权罪'],
}

# 较少见的刑事罪名
replace_dict_rare = {
    '传播': ['编造、故意传播虚假恐怖信息罪', '编造、故意传播虚假信息罪', '编造并传播证券、期货交易虚假信息罪'],
    '编造': ['编造、故意传播虚假恐怖信息罪', '编造、故意传播虚假信息罪', '编造并传播证券、期货交易虚假信息罪'],
    '破坏法律实施': ['组织、利用会道门、邪教组织、利用迷信破坏法律实施罪'],
    '武装': ['武装叛乱、暴乱罪', '伪造、变造、买卖武装部队公文、证件、印章罪', '盗窃、抢夺武装部队公文、证件、印章罪',
             '非法生产、买卖武装部队制式服装罪', '伪造、盗窃、买卖、非法提供、非法使用武装部队专用标志罪'],
    '境外': ['为境外窃取、刺探、收买、非法提供国家秘密、情报罪', '为境外窃取、刺探、收买、非法提供商业秘密罪',
             '为境外窃取、刺探、收买、非法提供军事秘密罪'],
    '主义': ['宣扬恐怖主义、极端主义、煽动实施恐怖活动罪', '强制穿戴宣扬恐怖主义、极端主义服饰、标志罪',
             '非法持有宣扬恐怖主义、极端主义物品罪', '拒绝提供间谍犯罪、恐怖主义犯罪、极端主义犯罪证据罪'],
    '恐怖': ['组织、领导、参加恐怖组织罪'],
    '劫持': ['劫持船只、汽车罪'],
    '披露': ['违规披露、不披露重要信息罪'],
    '会计': ['隐匿、故意销毁会计凭证、会计账簿、财务会计报告罪'],
    '行贿': ['对外国公职人员、国际公共组织官员行贿罪'],
    '合同': ['签订、履行合同失职被骗罪', '国家机关工作人员签订、履行合同失职被骗罪'],
    '人员': ['打击报复会计、统计人员罪', '国有公司、企业、事业单位人员失职罪', '金融工作人员购买假币、以假币换取货币罪'],
    '徇私舞弊': ['徇私舞弊低价折股、出售国有资产罪', '徇私舞弊造成破产、亏损罪', '徇私舞弊减刑、假释、暂予监外执行罪',
                 '徇私舞弊不征、少征税款罪', '徇私舞弊发售发票、抵扣税款、出口退税罪', '招收公务员、学生徇私舞弊罪'],
    '假币': ['出售、购买、运输假币罪', '金融工作人员购买假币、以假币换取货币罪', '持有、使用假币罪'],
    '金融机构': ['伪造、变造、转让金融机构经营许可证、批准文件罪'],
    '发行': ['擅自发行股票、公司、企业债券罪'],
    '股票': ['伪造、变造股票、公司、企业债券罪'],
    '债券': ['伪造、变造股票、公司、企业债券罪'],
    '誉': ['损害商业信誉、商品声誉罪', '侵害英雄烈士名誉、荣誉罪'],
    '票证': ['伪造、倒卖伪造的有价票证罪'],
    '倒卖': ['倒卖车票、船票罪'],
    '权利': ['侵犯公民人身权利、民主权利罪'],
    '民族': ['煽动民族仇恨、民族歧视罪', '出版歧视、侮辱少数民族作品罪'],
    '私自': ['私自开拆、隐匿、毁弃邮件、电报罪'],
    '虐待': ['虐待被监护、看护人罪'],
    '乞讨': ['组织残疾人、儿童乞讨罪'],
    '间谍': ['非法生产、销售专用间谍器材、窃听、窃照专用器材罪'],
    '装备': ['非法生产、买卖警用装备罪', '破坏武器装备、军事设施、军事通信罪', '过失损坏武器装备、军事设施、军事通信罪',
             '故意提供不合格武器装备、军事设施罪', '过失提供不合格武器装备、军事设施罪', '盗窃、抢夺武器装备、军用物资罪',
             '非法出卖、转让武器装备罪'],
    '军事': ['破坏武器装备、军事设施、军事通信罪', '过失损坏武器装备、军事设施、军事通信罪', '故意提供不合格武器装备、军事设施罪',
             '过失提供不合格武器装备、军事设施罪', '战时拒绝、故意延误军事订货罪', '擅离、玩忽军事职守罪'],
    '战时': ['战时拒绝、逃避征召、军事训练罪', ' 战时拒绝、逃避服役罪', '战时拒绝、故意延误军事订货罪',
             '战时拒绝军事征收、征用罪', '战时拒绝军事征收、征用罪'],
    '物资': ['盗窃、抢夺武器装备、军用物资罪'],
    '客户': ['用账外客户资金非法拆借、发放贷款罪'],
    '非法持有': ['非法持有国家绝密、机密文件、资料、物品罪'],
    '非法使用': ['非法使用窃听、窃照专用器材罪'],
    '答案': ['非法出售、提供试题、答案罪'],
    '试题': ['非法出售、提供试题、答案罪'],
    '集会': ['非法集会、游行、示威罪', '破坏集会、游行、示威罪'],
    '游行': ['非法集会、游行、示威罪', '破坏集会、游行、示威罪'],
    '示威': ['非法集会、游行、示威罪', '破坏集会、游行、示威罪'],
    '侮辱': ['侮辱国旗、国徽、国歌罪'],
    '尸': ['盗窃、侮辱、故意毁坏尸体、尸骨、骨灰罪'],
    '骨': ['盗窃、侮辱、故意毁坏尸体、尸骨、骨灰罪'],
    '聚集': ['组织、资助非法聚集罪'],
    '重伤': ['组织、利用会道门、邪教组织、利用迷信致人重伤、死亡罪'],
    '死亡': ['组织、利用会道门、邪教组织、利用迷信致人重伤、死亡罪'],
    '案件信息': ['披露、报道不应公开的案件信息罪'],
    '赃物': ['窝藏、转移、收购、销售赃物罪'],
    '出入境': ['提供伪造、变造的出入境证件罪'],
    '盗掘': ['盗掘古文化遗址、古墓葬罪', '盗掘古人类化石、古脊椎动物化石罪'],
    '文物': ['失职造成珍贵文物损毁、流失罪', '非法向外国人出售、赠送珍贵文物罪', '非法出售、私赠文物藏品罪'],
    '界': ['破坏界碑、界桩罪'],
    '血液': ['非法采集、供应血液、制作、供应血液制品罪', '采集、供应血液、制作、供应血液制品事故罪'],
    '人类': ['非法采集人类遗传资源、走私人类遗传资源材料罪'],
    '植入': ['非法植入基因编辑、克隆胚胎罪'],
    '克隆': ['非法植入基因编辑、克隆胚胎罪'],
    '动植物': ['妨害动植物防疫、检疫罪'],
    '植物': ['非法采伐、毁坏国家重点保护植物罪', '非法收购、运输、加工、出售国家重点保护植物、国家重点保护植物制品罪',
             '非法买卖、运输、携带、持有毒品原植物种子、幼苗罪', '走私珍稀植物、珍稀植物制品罪'],
    '物种': ['非法引进、释放、丢弃外来入侵物种罪'],
    '标志': ['非法生产、买卖军用标志罪'],
    '渎职': ['食品、药品监管渎职罪'],
    '军情': ['隐瞒、谎报军情罪'],
    '军令': ['拒传、假传军令罪'],
    '房地产': ['擅自出卖、转让军队房地产罪'],
    '传染': ['传染病菌种、毒种扩散罪'],
    '核材料': ['非法买卖、运输核材料罪'],
    '商业秘密': ['侵犯商业秘密罪', '为境外窃取、刺探、收买、非法提供商业秘密罪'],
}

def match_sub_seq(a, b):
    i, j = 0, 0
    while True:
        if a[i] == b[j]: i += 1
        j += 1
        if i == len(a): return True
        if j == len(b): return False

def process_special_case(l):
    # remove space
    l = l.replace(' ', '')
    if '（' in l: l = l[:l.find('（')]+l[l.find('）')+1:]
    if '有' == l[0] or '的' == l[0] or '了' == l[0]: l = l[1:]

    if l in CAUSE_NAMES: return l
    for keyword, cause_names in replace_dict.items():
        if keyword in l:
            for cause_name in cause_names:
                if match_sub_seq(l, cause_name): return cause_name
    for keyword, cause_names in replace_dict_rare.items():
        if keyword in l:
            for cause_name in cause_names:
                if match_sub_seq(l, cause_name): return cause_name

    if len(l) < 30:
        min_dist = 1
        best_name = ''
        for name in CAUSE_NAMES:
            dist = Levenshtein.distance(l, name)/max(len(l), len(name))
            if dist < min_dist:
                best_name = name
                min_dist = dist
        if min_dist < 0.4:
            return best_name
    # if len(l) > 2:
    #     print(f'strange name: {l}')
    return ''

def get_crime_from_text(doc):
    # 从判决结果中抽取罪名
    pattern = re.compile(r'犯([^罪犯，。；《》（）]+?罪)')
    # 按节划分判决结果，有两种编号方式：一、 和 （一）
    patt1 = re.compile(r'[一二三四五六七八九十]{1,3}、|（[一二三四五六七八九十]{1,3}）')
    # 从全文中抽取的情况，从判决结果部分开始，前面的分析过程部分干扰项太多
    patt2 = re.compile(r'之的]规定，(判决|裁定)如下.*')
    # 避免与抽罪名的正则冲突，尽可能消除有‘犯’字存在的情况
    # TODO: 如果人名中存在犯字则无法解决，只能交给模糊匹配了
    patt3 = re.compile(r'[主初累从再]犯')
    # 极个别判决书会用这种形式书写，仅在根据全文抽取时会用到
    patt4 = re.compile(r'以([^罪，]+?罪)判处')

    # 抽取的主要过程，因为可能要调用多次所以就整理成一个函数
    # is_qw表示是否在处理全文
    def get_labels(text, is_qw=False):
        if is_qw:
            if t is not None: text = t.group()
            # 去除无关的‘犯’字
            text = patt3.sub('', text)
            # 用patt4先提取一遍罪名
            raw_list = patt4.findall(text)
        else: raw_list = []

        pjjg = patt1.split(text)
        if len(pjjg) == 1:
            pjjg = re.split(r'[；。]', pjjg[0])
        for line in pjjg:
            # 二审/再审判决书里会有撤销的情况，直接删去对应节中撤销二字后面的内容
            if '撤销' in line: line = line[:line.find('撤销')]
            # 一些特殊情况
            line = line.replace('罪犯', '')
            raw_list.extend(pattern.findall(line))
        # 先去重，再处理罪名
        raw_list = set(raw_list)
        raw_labels = set(map(process_special_case, raw_list))
        # 如果有 ''，说明遇到了无法识别的罪名
        # 如有需要可根据这类情况查看具体的文书内容
        if '' in raw_labels: raw_labels.remove('')
        return raw_labels

    text = doc

    raw_labels = get_labels(text)

    # 出现无罪且没有提取到罪名时，确实为无罪的情况，对于数据集中的文档未发现例外
    if '无罪' in text and len(raw_labels) != 0:
        pass
        # print(f'{raw_labels} @@@ {text}')
    # 判决结果中没有抽取到罪名（多为二审/再审)，则从全文和标题中再抽取一遍, 暂且不考虑
    elif len(raw_labels) == 0:
        pass
        # raw_labels = get_labels(doc, is_qw=True)
        # raw_labels = raw_labels.union(get_labels(doc['writName']))
    # 记录二审或再审的情况
    # elif '二审' in doc['writName'] or '再审' in doc['writName']:
        # doc_logger.warning(f'再审情况 ### {raw_labels} {text}')
    return list(raw_labels)

def get_judgment(doc): # 截取doc的“判决”部分，返回doc本身和截取后的doc
    parser = DataSegmentXingshi(punctuation_replace=True)
    result = parser.parse(doc)
    return result['judgment']

def get_crime(full_doc):
    judgment = get_judgment(full_doc)
    crime_list = get_crime_from_text(judgment) # 改成了如果judgment里面提取不到，那就直接认为crime_list为空了
    return crime_list
    

def main(): 
    file = 'input/multi/v4/qwen2.5-7B-Instruct.json'
    ids = set()
    with open(file,'r',encoding='utf-8') as myFile:
        data = json.load(myFile)
        diff_sum = 0
        for item in data:
            gen, exp = item['gen_ans'], item['exp_ans']
            a = get_crime(gen)
            b = get_crime(exp)
            if a != b:
                diff_sum += 1
                print('gen: ', gen)
                print('生成的罪名：', a)
                print('-'*150)
                print('exp: ', exp)
                print('预期的罪名：', b)
                print('*'*150)
                print('*'*150)
        print(f"共计{diff_sum}条提取出了不同的罪名")
if __name__ == '__main__':
    main()